---
# apiVersion: v1
# kind: Service
# metadata:
#   labels:
#     # For use as a Cluster add-on (https://github.com/kubernetes/kubernetes/tree/master/cluster/addons)
#     # If you are NOT using this as an addon, you should comment out this line.
#     #kubernetes.io/cluster-service: 'true'
#     kubernetes.io/name: grafana
#   name: grafana-external
#   namespace: monitoring
# spec:
#   # In a production setup, we recommend accessing Grafana through an external Loadbalancer
#   # or through a public IP.
#   # type: LoadBalancer
#   # You could also use NodePort to expose the service at a randomly-generated port
#   type: NodePort
#   ports:
#   - port: 80
#     targetPort: 3000
#   selector:
#     name: prom-stack-test-release-grafana

apiVersion: v1
kind: Service
metadata:
  name: grafana-external
spec:
  #type: LoadBalancer
  ports:
    - port: 80
  selector:
    app.kubernetes.io/instance: prometheus-operator
    app.kubernetes.io/name: grafana
  type: NodePort
# apiVersion: v1
# kind: Service
# metadata:
#   name: grafana-external
#   namespace: monitoring
#   #labels:
#     #app.kubernetes.io/instance: prom-stack-test-release
#   #  app.kubernetes.io/name: grafana
# spec:
#   ports:
#     - name: prom-stack-test-release-grafana
#       port: 80
#       protocol: TCP
#       #targetPort: 80
#   selector:
#     #app.kubernetes.io/instance: prom-stack-test-release
#     app.kubernetes.io/name: grafana
#   sessionAffinity: None
#   type: NodePort

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: thanos-querier-ext
#   namespace: monitoring
#   labels:
#     app: thanos-querier
# spec:
#   ports:
#   - name: thanos-querier
#     port: 10902
#     protocol: TCP
#     targetPort: 10902
#   selector:
#     app: thanos-querier
#   sessionAffinity: None
#   type: NodePort

# ---

